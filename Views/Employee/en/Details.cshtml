@model HrSystem.Models.EmployeeViewModel

@{ //Layout = null;
    ViewData["Title"] = "Details"; }

<div class="list-group-item-info modal-title text-center">
    <h2>Employees-Details</h2>
</div>
<hr />
<div class="form-row">
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-2" style="margin:15px;">
                <img src="/MediaFiles/Employees/Images/@Model.Img_Name" alt="@Model.First_Name_En" style="width:100px;height:auto;" />

            </div>
            @if(Model.AttachmentFile!=null&&!string.IsNullOrEmpty(Model.AttachmentFile))
            {
            <div class="col-md-2">
                <div class="card" style="margin: 15px; width: 150px; height: auto;">
                    <img src="~/imgs/pdf.svg" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5>View PDF</h5>
                        <a href="@Url.Action("ViewPdf", "Employee", new { fileName = Model.AttachmentFile })" target="_blank">
                            View PDF
                        </a>
                        @*<p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>*@
                    </div>
                </div>

            </div>
            }
            <div class="col">
                <span class="badge badge-info">First Name English:</span>
                @Html.DisplayFor(m => m.First_Name_En)<br />
                <span class="badge badge-info">Last Name English:</span>
                @Html.DisplayFor(m => m.Last_Name_En) <br />
                <span class="badge badge-info">First Name Arabic:</span>
                @Html.DisplayFor(m => m.First_Name_Ar)<br />
                <span class="badge badge-info">Last Name Arabic:</span>
                @Html.DisplayFor(m => m.Last_Name_Ar) <br />
                <span class="badge badge-info">Phone Number:</span>
                @Html.DisplayFor(m => m.Phone_Number) <br />
                <span class="badge badge-info">Email:</span>
                @Html.DisplayFor(m => m.Email) <br />
                <span class="badge badge-info">Added Date :</span>
                @if(Model.AddedDate!=null){
                @Model.AddedDate.Value.ToString("yyyy-MM-dd")
                }<br />
                <!--<div class="container">
    <div class="row">
        <div class="col-4">First Name English:</div>
        <div class="col">@Html.DisplayFor(m => m.First_Name_En)</div>-->
                <!-- Force next columns to break to new line at md breakpoint and up -->
                <!--<div class="w-100 d-none d-md-block"></div>

        <div class="col-4">Last Name English:</div>
        <div class="col">@Html.DisplayFor(m => m.Last_Name_En)</div>
    </div>
    <div class="row">
        <div class="col-4">First Name Arabic:</div>
        <div class="col">@Html.DisplayFor(m => m.First_Name_Ar)</div>-->
                <!-- Force next columns to break to new line at md breakpoint and up -->
                <!--<div class="w-100 d-none d-md-block"></div>

            <div class="col-4">Last Name Arabic:</div>
            <div class="col">@Html.DisplayFor(m => m.Last_Name_Ar)</div>
        </div>
    </div>-->
            </div>
        </div>
        <div class="row">
            <div class="col">
                <span class="badge badge-info">Date Of Hire:</span>
                @if(Model.Hire_Date!=null){
                @Model.Hire_Date.Value.ToString("yyyy-MM-dd")
                }<br />
                <span class="badge badge-info h4">Department Name:</span>
                @Html.DisplayFor(m => m.Department.Name_En) <br />

                <span class="badge badge-info h4">Birth Place:</span>
                @Html.DisplayFor(m => m.BirthPlace) <br />
                <span class="badge badge-info h4">Birth Of Date:</span>
                @if(Model.BirthOfDate!=null){
                @Model.BirthOfDate.Value.ToString("yyyy-MM-dd")
                }<br />
                <span class="badge badge-info h4">Identity Type :</span>
                @Html.DisplayFor(m => m.IdentityTypeObject.Name_En) <br />

                <span class="badge badge-info h4">Identity Issu Date:</span>
                @if(Model.IdentityIssuDate!=null){
                @Model.IdentityIssuDate.Value.ToString("yyyy-MM-dd")
                } <br />

                <span class="badge badge-info h4">Identity Issu Place:</span>
                @Html.DisplayFor(m => m.IdentityIssuPlace) <br />
            </div>
            <div class="col">
                <span class="badge badge-info">Address:</span>
                @Html.DisplayFor(m => m.Address) <br />
                <span class="badge badge-info h4">City Name:</span>
                @Html.DisplayFor(m => m.City.CityName_En) <br />

                <span class="badge badge-info h4">Nationality :</span>
                @Html.DisplayFor(m => m.Nationality.Nationality_En) <br />
                <span class="badge badge-info h3">Country of Residence:</span>
                @Html.DisplayFor(m => m.Country.CountryName_En) <br />
                <span class="badge badge-info h3">Identity Number:</span>
                @Html.DisplayFor(m => m.IdentityNumber) <br />
                <span class="badge badge-info h3">Identity Expired Date:</span>
                @if(Model.IdentityExpiredDate!=null){
                   @Model.IdentityExpiredDate.Value.ToString("yyyy-MM-dd")
                }
                <br />
                <span class="badge badge-info h3">Blood Type:</span>
                @Html.DisplayFor(m => m.BloodType) <br />
            </div>
        </div>
        <hr />
        
        <div class="row">
            <div class="col">
             <a href="/employee/edit/@Model.Id" class="btn btn-primary btn-block">Edit</a>
            </div>

            <div class="col">
                <a asp-action="Index" class="btn btn-outline-info btn-block">Back to List</a>
            </div>
        </div>

    </div>
</div>

<script>function IsValidImage() {
        var fileInput = document.getElementById('fileupload');
        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.bmp|\.gif)$/i;
        if (!allowedExtensions.exec(filePath)) {
            alert('Please upload file having extensions .jpeg/.jpg/.png/.gif/.bmp only.');
            fileInput.value = '';
            return false;
        }
    }</script>